<?xml version="1.0" ?>
<project name="test" default="usage" basedir="..">
  <target name="usage">
    <echo>                                                    </echo>
    <echo> the following targets are available ...            </echo>
    <echo>                                                    </echo>
    <echo>   compile   compile and build classes              </echo>
    <echo>                                                    </echo>
    <echo>   archive   compile, build classes and make        </echo>
    <echo>             archives for distribution              </echo> 
  </target>
    
  <property name="workspace" value="${basedir}"/>
  <property name="workspace.sources" value="${workspace}/sources"/>
  <property name="workspace.development" value="${workspace}/development"/>
  <property name="workspace.libraries" value="${workspace}/libraries"/>
  <property name="workspace.releases" value="${workspace}/releases"/>
  
  <property name="build" value="${workspace}/build"/>
  <property name="build.project" value="${build}/${ant.project.name}"/>
  <property name="build.sources" value="${build.project}/sources"/>
  <property name="build.classes" value="${build.project}/classes"/>
  <property name="build.javadoc" value="${build.project}/javadoc"/>
  
  <property name="compile.target" value="8"/>
  <property name="compile.source" value="8"/>
  <property name="compile.debug" value="on"/>
  <property name="compile.optimize" value="on"/>
  <property name="compile.deprecation" value="on"/>
  
  <macrodef name="release-locate">
    <sequential>
      <copy file="${workspace.development}/release.txt" tofile="${workspace.development}/release.tmp" overwrite="true"/>
      <replaceregexp file="${workspace.development}/release.tmp"
        match="(?s)^\s*([\d\.x]+) (\d{4})([\dx]+).*$" flags="g" byline="false"
        replace="release.version=\1&#x000D;release.year=\2&#x000D;release.date=\2\3&#x000D;"/>
      <replaceregexp file="${workspace.development}/release.tmp" match="x+" replace="0000" flags="g" byline="false"/>
      <loadproperties>
        <file file="${workspace.development}/release.tmp"/>
      </loadproperties>
      <delete file="${workspace.development}/release.tmp"/>
    </sequential>
  </macrodef>  
  
  <target name="changes">
    <copy file="${workspace.development}/release.txt" tofile="${workspace}/CHANGES" overwrite="true"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00E4;" replace="ae" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00C4;" replace="Ae" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00F6;" replace="oe" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00D6;" replace="Oe" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00FC;" replace="ue" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00DC;" replace="Ue" flags="g"/>
      
    <copy file="${workspace.development}/release.txt" tofile="${workspace.development}/release.tmp" overwrite="true"/>
    <replaceregexp file="${workspace.development}/release.tmp" match="^\s+" replace="" byline="false"/>
    <replaceregexp file="${workspace.development}/release.tmp" match="(?s)^(.*?)[\r\n]+\d[\d\. x]+.*$" replace="\1" byline="false"/>
    <replaceregexp file="${workspace.development}/release.tmp" match="^(.*?)\s*$" replace="\1  " flags="g" byline="true"/>
    <replaceregexp file="${workspace.development}/release.tmp" match="^(\d[\.\d x]+)[^\r\n]*" replace="## \1" byline="false"/>
    <replaceregexp file="${workspace.development}/release.tmp" match="^ +([A-Z]+:.*)\s*$" replace="\1" byline="true"/>
    <replaceregexp file="${workspace.development}/release.tmp" match="(?s)[\r\n]+ [^\r\n]+" replace="" flags="g" byline="false"/>  
    <replaceregexp file="${workspace.development}/release.tmp" match="^(## \d[\.\d]+ \d+)(  )" replace="\1 (summary of the current version)\2" flags="g" byline="true"/>
    <replaceregexp file="${workspace.development}/release.tmp" match="^(## \d[\.\d]+ [\dx]+)(  )" replace="\1 (summary of the next version)\2" flags="g" byline="true"/>
    <loadresource property="changes">
      <file file="${workspace.development}/release.tmp"/>
    </loadresource>
    <delete file="${workspace.development}/release.tmp"/>
    <replaceregexp file="${workspace}/README.md"
      match="(?si)(# Changes \(Change Log\)\s+).*?(\[Read more\])" flags="g" byline="false"
      replace="\1${changes}${line.separator}${line.separator}\2"/>
  </target>
  
  <target name="compile">
    <release-locate/>
    <delete dir="${build}"/> 
    <delete>
      <fileset dir="${workspace.libraries}">
        <include name="seanox-${ant.project.name}*"/>
      </fileset>
    </delete>
    <mkdir dir="${build.sources}"/>    
    <copy todir="${build.sources}">
      <fileset dir="${workspace.sources}"/>
    </copy>
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${build.sources}"/>
    </touch>
    <zip destfile="${workspace.libraries}/seanox-${ant.project.name}-${release.version}-sources.jar"
      basedir="${build.sources}" compress="true" filesonly="true"/>    
    <mkdir dir="${build.classes}"/>    
    <javac srcdir="${build.sources}" destdir="${build.classes}" 
      source="${compile.source}" target="${compile.target}" includeantruntime="false"
      debug="${compile.debug}" optimize="${compile.optimize}" deprecation="${compile.deprecation}">
      <compilerarg value="-Xlint:-options"/>
    </javac>
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${build.classes}"/>
    </touch>
    <zip destfile="${workspace.libraries}/seanox-${ant.project.name}-${release.version}.jar"
      basedir="${build.classes}" compress="true" filesonly="true"/>    
    
    <echo file="${build}/overview.html"><![CDATA[<html><body></body></html>]]></echo>
    <javadoc destdir="${build.javadoc}" windowtitle="Seanox Test API"
      author="true" version="true" use="true" linksource="true" noqualifier="all" overview="${build}/overview.html">
      <fileset dir="${build.sources}" defaultexcludes="yes"/>
      <doctitle>
        <![CDATA[
        <h1>Seanox Test API ${release.version}</h1>
        Extended API for JUnit tests.
        <h2>Licence Agreement</h2>
        Seanox Software Solutions ist ein Open-Source-Projekt, im Folgenden Seanox
        Software Solutions oder kurz Seanox genannt.<br>
        <br>
        Diese Software unterliegt der Version 2 der GNU General Public License.<br>
        <br>
        Copyright (C) ${release.year} Seanox Software Solutions<br>
        <br>
        This program is free software; you can redistribute it and/or modify it
        under the terms of version 2 of the GNU General Public License as published
        by the Free Software Foundation.<br>
        <br>
        This program is distributed in the hope that it will be useful, but WITHOUT
        ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
        FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
        details.<br>
        <br> 
        You should have received a copy of the GNU General Public License along
        with this program; if not, write to the Free Software Foundation, Inc.,
        51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
        ]]>
      </doctitle>
      <link offline="false" href="https://docs.oracle.com/javase/${compile.source}/docs/api/"/>
    </javadoc>
    <delete file="${build}/overview.html"/>
    <zip destfile="${workspace.libraries}/seanox-${ant.project.name}-${release.version}-javadoc.jar"
      basedir="${build.javadoc}" compress="true" filesonly="true"/>      
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${workspace.libraries}">
        <include name="seanox-${ant.project.name}*"/>
      </fileset>
    </touch>    
    <delete dir="${build}"/>
  </target>  
  
  <fileset id="fileset.archive.source" dir="${workspace}" defaultexcludes="false">
    <include name=".settings/org.eclipse.jdt.core.prefs"/> 
    <include name="development/build.xml"/>
    <include name="development/release.txt"/>
    <include name="libraries/**/*"/>
    <exclude name="libraries/**/seanox-${ant.project.name}*"/>
    <include name="sources/**/*"/>
    <include name=".classpath"/>
    <include name=".license"/>
    <include name=".project"/>
    <exclude name="**/.git*"/>
  </fileset>   
  
  <target name="archive" depends="compile">
    <delete dir="${build}"/>
    <mkdir dir="${build}"/>
    <mkdir dir="${build.project}"/>
    <copy file="${workspace}/.license" tofile="${build.project}/seanox-${ant.project.name}-${release.version}.license"/>
    <copy file="${workspace.development}/release.txt" tofile="${build.project}/seanox-${ant.project.name}-${release.version}.release"/>
    <copy todir="${build.project}">
      <fileset dir="${workspace.libraries}">
        <include name="seanox-${ant.project.name}-${release.version}*"/>
        <include name="hamcrest-core-*"/>
        <include name="junit-*"/>        
      </fileset>
    </copy>
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${build}"/>
    </touch>  
    <delete file="${workspace.releases}/seanox-${ant.project.name}-${release.version}.zip"/>
    <zip destfile="${workspace.releases}/seanox-${ant.project.name}-${release.version}.zip"
      basedir="${build}" compress="true" filesonly="false" defaultexcludes="false"/> 
    <touch datetime="${release.date}" pattern="yyyyMMdd"
      file="${workspace.releases}/seanox-${ant.project.name}-${release.version}.zip"/>
    <delete dir="${build}"/>
    
    <mkdir dir="${build}"/>
    <mkdir dir="${build.project}"/>
    <copy todir="${build.project}">
      <fileset refid="fileset.archive.source"/>
    </copy>     
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${build}"/>
    </touch>  
    <delete file="${workspace.releases}/seanox-${ant.project.name}-${release.version}-src.zip"/>
    <zip destfile="${workspace.releases}/seanox-${ant.project.name}-${release.version}-src.zip"
      basedir="${build}" compress="true" filesonly="false" defaultexcludes="false"/> 
    <touch datetime="${release.date}" pattern="yyyyMMdd"
      file="${workspace.releases}/seanox-${ant.project.name}-${release.version}-src.zip"/>
    <delete dir="${build}"/>
  </target>  
</project>